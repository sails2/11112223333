name: lede_x86_x64

on:
  #push:
  #  branches: 
  #    - master
  #schedule:
  #  - cron: 0 20 * * *
  #release:
  #  types: [published]
  workflow_dispatch:
    inputs:
      cpu_platform:
        description: 'x86 x64'
        required: true
        default: 'x64'
    #  ssh:
    #    description: 'SSH connection to Actions'
    #    required: false
    #    default: 'true'
        
jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          # ref: master
          #use one branch code
          # ref: 20220505

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install wget rsync build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          # sudo -E apt-get -y install lib32gcc1
          sudo -E apt-get -y install lib32gcc-s1
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          
      - name: Update feeds
        run: |
          #some backup cmd for manual build
          # su runner
          # cd
          git clone https://github.com/coolsnowwolf/lede -b master openwrt
          cd openwrt
          #change code to one stable branch
          # git checkout 20220505
          
          #not used now, change code to one commit point example
          # git reset --hard 14f0a65
          
          #old branch such as 20220505 need old packages to compile correctly, better method
          # sed -i 's/.*packages https:\/\/github.com\/coolsnowwolf.*/src-git-full packages https:\/\/github.com\/coolsnowwolf\/packages^bfc325c589c34213b031f98dcad0f7f5c70af870/g' feeds.conf.default
          # sed -i 's/.*luci https:\/\/github.com\/coolsnowwolf.*/src-git-full luci https:\/\/github.com\/coolsnowwolf\/luci^2a5da72bb4df112abf4e42f249b7c732263d82fd/g' feeds.conf.default
          #deal xxd compile download link error
          # sed -i 's/PKG_SOURCE_URL:=.*/PKG_SOURCE_URL:=https:\/\/github.com\/openwrt\/openwrt\/files\/9448781\//g' tools/xxd/Makefile
          
          #change x86 default eth0 eth1 to LAN
          sed -i 's/board_config_update/board_config_update;ucidef_set_interfaces_lan_wan "eth0 eth1"/g' target/linux/x86/base-files/etc/board.d/02_network

          #change default ip from 192.168.1.1 to 192.168.29.254
          # sed -i 's/192.168.1.1/192.168.29.254/g' package/base-files/files/bin/config_generate
          
          #must do, hello world packages
          # just a example use one point: echo "src-git-full helloworld https://github.com/fw876/helloworld^012314f95df30118b9151d6d1bbbce7262a11e59" >> feeds.conf.default
          echo "src-git helloworld https://github.com/fw876/helloworld" >> feeds.conf.default
          
          ./scripts/feeds update -a
          ./scripts/feeds install -a

          #use n2n_v2 2.8
          find -name "*n2n*" | xargs -i rm -rf  {}
          wget shjcnutrition.top/n2n_v2.zip -O n2n_v2.zip
          unzip -q n2n_v2.zip
          cp -rf n2n_v2/package/lean/n2n_v2 package/feeds/packages/
          cp -rf n2n_v2/package/lean/n2n_v2 feeds/packages/net/
          cp -rf n2n_v2/package/lean/luci-app-n2n_v2 package/feeds/luci/
          cp -rf n2n_v2/package/lean/luci-app-n2n_v2 feeds/luci/applications/

      #will be cancled in 1 hour, do not use if not necessary
      #- name: SSH connection to Actions
      #  uses: hoistthesails/ssh2actions@v1.0.0
      #  if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      #  env:
      #    TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      #    TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}          
          
      - name: Generate configuration file
        working-directory: ./openwrt
        run: |
          wget shjcnutrition.top/lede_${{ github.event.inputs.cpu_platform }}_config -O .config

          # make menuconfig
          #注意在Extra packages ---> 把autosamba取消
          #在选择插件的那里把luci-app-samba取消，选择luci-app-samba4
          #在Network ---> 把 samba36-server取消
          #LUCI->Applications中选择并关闭需要的插件
          
      - name: Make download
        working-directory: ./openwrt
        run: |
          make download -j$(nproc) V=s
          find dl -size -1024c -exec rm -f {} \;
          
      - name: Compile firmware
        working-directory: ./openwrt
        run: |
          #wsl need modify PATH to compile
          # time PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin make -j$(nproc) V=s || make -j1 V=s
          #ssh remote compile
          # nohup make -j$(nproc) V=s || make -j1 V=s &
          make -j$(nproc) || make -j1
          
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
          
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./openwrt/bin/targets/ -type d -name "packages")
          cp -rf $(find ./openwrt/bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./openwrt/bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./openwrt/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
          
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: LEDE_${{ github.event.inputs.cpu_platform }}_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: LEDE_${{ github.event.inputs.cpu_platform }}_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: LEDE_${{ github.event.inputs.cpu_platform }}_firmware
          path: ./openwrt/bin/targets/
